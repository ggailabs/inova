# server.py
import re
import pandas as pd
from mcp.server.fastmcp import FastMCP, Context

# Inicializa o MCP
mcp = FastMCP("MVP_INOVA_MCP")
print(f"Servidor MCP '{mcp.name}' inicializado.")

# URLs dos CSVs hospedados
URL_SOLO = 'https://inova.ggailabs.com/dados/CA01.csv'
URL_METEO = 'https://inova.ggailabs.com/dados/dados.csv'

# Carregar os dados direto da URL
df_solo = pd.read_csv(URL_SOLO, sep=';')
df_meteo = pd.read_csv(URL_METEO, sep=';')

# --- TOOL: Consulta Meteorol√≥gica ---
@mcp.tool()
def consultar_meteorologia(data: str, hora: str) -> str:
    """Consulta dados clim√°ticos por data e hora."""
    filtro = df_meteo[(df_meteo['Data'] == data) & (df_meteo['Hora (UTC)'] == hora)]
    if filtro.empty:
        return f"Sem dados para {data} √†s {hora}h."
    row = filtro.iloc[0]
    return (
        f"üå§Ô∏è Clima em {data} √†s {hora}h:\n"
        f"Temperatura: {row['Temp. Ins. (C)']}¬∞C\n"
        f"Umidade: {row['Umi. Ins. (%)']}%\n"
        f"Chuva: {row['Chuva (mm)']} mm\n"
        f"Vento: {row['Vel. Vento (m/s)']} m/s"
    )

# --- TOOL: Consulta An√°lise de Solo ---
@mcp.tool()
def consultar_analise_solo(talhao: str) -> str:
    """Consulta an√°lise de solo pelo talh√£o."""
    if 'Talh√£o' not in df_solo.columns:
        return "Arquivo de solo n√£o possui coluna 'Talh√£o'."
    filtro = df_solo[df_solo['Talh√£o'] == talhao]
    if filtro.empty:
        return f"Sem an√°lise encontrada para o talh√£o {talhao}."
    row = filtro.iloc[0]
    return (
        f"üå± An√°lise do Talh√£o {talhao}:\n"
        f"pH: {row.get('pH', 'N/A')}\n"
        f"Mat√©ria Org√¢nica: {row.get('MO', 'N/A')}\n"
        f"P: {row.get('P', 'N/A')} mg/dm¬≥\n"
        f"K: {row.get('K', 'N/A')} cmolc/dm¬≥"
    )

# --- TOOL: Recomenda√ß√£o de Aduba√ß√£o ---
@mcp.tool()
def recomendar_adubacao_basica(talhao: str) -> str:
    """Sugere aduba√ß√£o simples com base no pH."""
    if 'Talh√£o' not in df_solo.columns:
        return "Arquivo de solo n√£o possui coluna 'Talh√£o'."
    filtro = df_solo[df_solo['Talh√£o'] == talhao]
    if filtro.empty:
        return f"Nenhuma an√°lise para o talh√£o {talhao}."
    row = filtro.iloc[0]
    ph = float(str(row.get('pH', '0')).replace(',', '.'))
    if ph < 5.5:
        return f"Recomenda-se calagem no talh√£o {talhao}, pH atual: {ph}."
    return f"pH do talh√£o {talhao} est√° adequado ({ph}). Aduba√ß√£o nitrogenada leve recomendada."

# --- Roda o servidor ---
if __name__ == "__main__":
    mcp.run()
